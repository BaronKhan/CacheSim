single word block cache

    Address bits = 8

    Bytes/Word = 4

    Words/Block = 1

    Blocks/Set = 4

    Sets/Cache = 2

    Hit time (cycles/Access) = 1

    Memory read time in cycles/Block = 3

    Memory write time in cycles/Block = 4


write-req 0 FF112233
read-req 0
write-req 4 22110044
write-req 8 66221100
write-req 0 00556677
write-req 20 55555555
read-req 0
read-req 8
write-req 4 12345678
write-req 12 11111111
write-req 68 00000000
read-req 68
read-req 4
read-req 0

//NOTE: Since only one word per block,
//no need to read block from cache on write miss.

# S0={,,,}, S1={,,,}, write-block=B0
write-ack 0 miss 1
# S0={B0/d,,,}, S1={,,,}, read-block=B0
read-ack 0 hit 1 FF112233
# S0={B0/d,,,}, S1={,,,}, write-block=B1
write-ack 1 miss 1
# S0={B0/d,,,}, S1={B1/d,,,}, write-block=B2
write-ack 0 miss 1
# S0={B0/d,B2/d,,}, S1={B1/d,,,}, write-block=B0
write-ack 0 hit 1
# S0={B0/d,B2/d,,}, S1={B1/d,,,}, write-block=B5
write-ack 1 miss 1
# S0={B0/d,B2/d,,}, S1={B1/d,B5/d,,}, read-block=B0
read-ack 0 hit 1 00556677 	
# S0={B0/d,B2/d,,}, S1={B1/d,B5/d,,}, read-block=B2
read-ack 0 hit 1 66221100
# S0={B0/d,B2/d,,}, S1={B1/d,B5/d,,}, write-block=B1
write-ack 1 hit 1
# S0={B0/d,B2/d,,}, S1={B1/d,B5/d,,}, write-block=B3
write-ack 1 miss 1
# S0={B0/d,B2/d,,}, S1={B1/d,B5/d,B3/d,}, write-block=B17
write-ack 1 miss 1
# S0={B0/d,B2/d,,}, S1={B1/d,B5/d,B3/d,B17/d}, read-block=B17
read-ack 1 hit 1 00000000
# S0={B0/d,B2/d,,}, S1={B1/d,B5/d,B3/d,B17/d}, read-block=B1
read-ack 1 hit 1 12345678
# S0={B0/d,B2/d,,}, S1={B1/d,B5/d,B3/d,B17/d}, read-block=B0
read-ack 0 hit 1 00556677
# S0={B17/d,B1/d,B0,B3/d}, S1={,B5/d,,}


//to search for block in set, loop through and match tag 

