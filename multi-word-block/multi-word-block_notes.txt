multi-word block cache

    Address bits = 16

    Bytes/Word = 3

    Words/Block = 5

    Blocks/Set = 2

    Sets/Cache = 2

    Hit time (cycles/Access) = 1

    Memory read time in cycles/Block = 2

    Memory write time in cycles/Block = 3

bytes 0-2 is a word
bytes 0-14 is a block

write-req 0 ABCDEF
write-req 3 123456
read-req 3
write-req 18 333333
write-req 33 FEDCBA
debug-req
flush-req
debug-req
read-req 18
write-req 64

# S0={,}, S1={,}, write-block=B0
write-ack 0 miss 3
# S0={B0/d,}, S1={,}, write-block=B0
write-ack 0 hit 1
# S0={B0/d,}, S1={,}, read-block=B0
read-ack 0 hit 1 123456
# S0={B0/d,}, S1={,}, write-block=B1
write-ack 1 miss 3
# S0={B0/d,}, S1={B1/d,}, write-block=B2
write-ack 0 miss 3
debug-ack-begin
# S0={B0/d,B2/d}, S1={B1/d,}
debug-ack-end
flush-ack 9
debug-ack-begin
# S0={B0,B2}, S1={B1,}
debug-ack-end
# S0={B0,B2}, S1={B1,}, read-block=B1
read-ack 1 hit 1 333333
# S0={B0,B2}, S1={B1,}, write-block=B4
write-ack 0 miss 3
# S0={B4,B2}, S1={B1,}

